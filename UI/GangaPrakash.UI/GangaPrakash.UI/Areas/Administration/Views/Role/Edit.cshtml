@using GangaPrakashAPI.Model
@model RoleTrans
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Role</h5>
                </div>
                <div class="ibox-content">
                    <form role="form" method="post">
                        @Html.HiddenFor(model => model.role.Id)
                        @Html.AntiForgeryToken()
                        <div class="form-group row">
                            <label class="col-sm-2 col-form-label">Name</label>
                            <div class="col-sm-4"><input type="text" id="role.Name" name="role.Name" placeholder="Name" class="form-control" value="@Model.role.Name" required=""></div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-2 col-form-label"></label>
                            <div class="col-sm-4">
                                @Html.ValidationMessageFor(model => model.role.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-12">
                                <div class="ibox ">
                                    <div class="ibox-title">
                                        <h5><strong>Menus</strong> </h5>

                                    </div>
                                    <div class="ibox-content">

                                        <table class="table table-bordered i-checks">
                                            <thead>
                                                <tr>
                                                    <th>Module</th>
                                                    <th>Menus</th>

                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{
                                                    Int32 Count = 0;
                                                }
                                                @foreach (var item in Model.menuList.GroupBy(a => a.ModuleId))
                                                {
                                                    <tr>
                                                        <td>@item.FirstOrDefault().Module</td>
                                                        <td>
                                                            @foreach (var item1 in item.OrderBy(a => a.SequenceNo))
                                                            {
                                                                <input type="hidden" value="@item1.Id" name="menuList[@Count].Id" id="menuList[@Count].Id" />
                                                                <input type="hidden" value="@item1.Name" name="menuList[@Count].Name" id="menuList[@Count].Name" />
                                                                <input type="hidden" value="@item1.ModuleId" name="menuList[@Count].ModuleId" id="menuList[@Count].ModuleId" />
                                                                <input type="hidden" value="@item1.ParentId" name="menuList[@Count].ParentId" id="menuList[@Count].ParentId" />
                                                                <input type="hidden" value="@item1.IsParent.ToString()" name="menuList[@Count].IsParent" id="menuList[@Count].IsParent" />
                                                                <input type="hidden" value="@item1.Module" name="menuList[@Count].Module" id="menuList[@Count].Module" />
                                                                <input type="hidden" value="@item1.SequenceNo" name="menuList[@Count].SequenceNo" id="menuList[@Count].SequenceNo" />

                                                                if (item1.IsParent)
                                                                {
                                                                    <input type="hidden" value="@true.ToString()" name="menuList[@Count].IsChecked" id="menuList[@Count].IsChecked" />

                                                                }
                                                                else
                                                                {
                                                                    <label class="i-checks checkbox-inline">
                                                                        @Html.CheckBox("menuList[" + Count + "].IsChecked", item1.IsChecked, new { @id = "menuList[" + Count + "].IsChecked" })<i></i> @item1.Name
                                                                    </label>
                                                                }
                                                                Count = Count + 1;
                                                            }
                                                        </td>

                                                    </tr>


                                                }


                                            </tbody>
                                        </table>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-4 col-sm-offset-2"></div>
                            <div class="col-sm-4 col-sm-offset-2"></div>

                            <div class="col-sm-4 col-sm-offset-2">
                                <button class="btn btn-primary btn-sm" type="submit">Save</button>
                                <button class="btn btn-danger btn-sm DeleteRole" type="button">Delete</button>
                                <button class="btn btn-white btn-sm" type="button" onclick="location.href='@Url.Action("Index","Role",new { Area="Administration"})'">Cancel</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <!-- iCheck -->
    <script src="~/lib/iCheck/icheck.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
        });
        $('.DeleteRole').click(function () {
            swal({
                title: "Are you sure?",
                text: "",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Delete",
                cancelButtonText: "Cancel",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        var Id = '@Model.role.Id';
                        var DeleteUrl = '@Url.Action("Delete","Role",new { Area="Administration",Id=Model.role.Id})';
                        window.location.href = DeleteUrl;
                    } else {
                        swal("Cancelled", "Cancelled :)", "error");
                    }
                });
        });
    </script>
}
<style>
    .i-checks {
        min-width: 140px !important;
    }
</style>